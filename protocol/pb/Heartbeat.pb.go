// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: Heartbeat.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeartbeatArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string       `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ChunkId           []string     `protobuf:"bytes,2,rep,name=ChunkId,proto3" json:"ChunkId,omitempty"`
	IOLoad            int64        `protobuf:"varint,3,opt,name=IOLoad,proto3" json:"IOLoad,omitempty"`
	SuccessChunkInfos []*ChunkInfo `protobuf:"bytes,4,rep,name=SuccessChunkInfos,proto3" json:"SuccessChunkInfos,omitempty"`
	FailChunkInfos    []*ChunkInfo `protobuf:"bytes,5,rep,name=FailChunkInfos,proto3" json:"FailChunkInfos,omitempty"`
	IsReady           bool         `protobuf:"varint,6,opt,name=IsReady,proto3" json:"IsReady,omitempty"`
}

func (x *HeartbeatArgs) Reset() {
	*x = HeartbeatArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Heartbeat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatArgs) ProtoMessage() {}

func (x *HeartbeatArgs) ProtoReflect() protoreflect.Message {
	mi := &file_Heartbeat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatArgs.ProtoReflect.Descriptor instead.
func (*HeartbeatArgs) Descriptor() ([]byte, []int) {
	return file_Heartbeat_proto_rawDescGZIP(), []int{0}
}

func (x *HeartbeatArgs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeartbeatArgs) GetChunkId() []string {
	if x != nil {
		return x.ChunkId
	}
	return nil
}

func (x *HeartbeatArgs) GetIOLoad() int64 {
	if x != nil {
		return x.IOLoad
	}
	return 0
}

func (x *HeartbeatArgs) GetSuccessChunkInfos() []*ChunkInfo {
	if x != nil {
		return x.SuccessChunkInfos
	}
	return nil
}

func (x *HeartbeatArgs) GetFailChunkInfos() []*ChunkInfo {
	if x != nil {
		return x.FailChunkInfos
	}
	return nil
}

func (x *HeartbeatArgs) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkInfos      []*ChunkInfo `protobuf:"bytes,1,rep,name=ChunkInfos,proto3" json:"ChunkInfos,omitempty"`
	DataNodeAddress []string     `protobuf:"bytes,2,rep,name=DataNodeAddress,proto3" json:"DataNodeAddress,omitempty"`
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Heartbeat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_Heartbeat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_Heartbeat_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatReply) GetChunkInfos() []*ChunkInfo {
	if x != nil {
		return x.ChunkInfos
	}
	return nil
}

func (x *HeartbeatReply) GetDataNodeAddress() []string {
	if x != nil {
		return x.DataNodeAddress
	}
	return nil
}

type ChunkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkId    string `protobuf:"bytes,1,opt,name=ChunkId,proto3" json:"ChunkId,omitempty"`
	DataNodeId string `protobuf:"bytes,2,opt,name=DataNodeId,proto3" json:"DataNodeId,omitempty"`
	SendType   int32  `protobuf:"varint,3,opt,name=SendType,proto3" json:"SendType,omitempty"`
}

func (x *ChunkInfo) Reset() {
	*x = ChunkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Heartbeat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkInfo) ProtoMessage() {}

func (x *ChunkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Heartbeat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkInfo.ProtoReflect.Descriptor instead.
func (*ChunkInfo) Descriptor() ([]byte, []int) {
	return file_Heartbeat_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkInfo) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkInfo) GetDataNodeId() string {
	if x != nil {
		return x.DataNodeId
	}
	return ""
}

func (x *ChunkInfo) GetSendType() int32 {
	if x != nil {
		return x.SendType
	}
	return 0
}

var File_Heartbeat_proto protoreflect.FileDescriptor

var file_Heartbeat_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xdf, 0x01, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x4f, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x49, 0x4f, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x11, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x11, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x46, 0x61, 0x69, 0x6c, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x46,
	0x61, 0x69, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x69, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x0a, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x61, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x32, 0x46, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x05, 0x5a,
	0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Heartbeat_proto_rawDescOnce sync.Once
	file_Heartbeat_proto_rawDescData = file_Heartbeat_proto_rawDesc
)

func file_Heartbeat_proto_rawDescGZIP() []byte {
	file_Heartbeat_proto_rawDescOnce.Do(func() {
		file_Heartbeat_proto_rawDescData = protoimpl.X.CompressGZIP(file_Heartbeat_proto_rawDescData)
	})
	return file_Heartbeat_proto_rawDescData
}

var file_Heartbeat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_Heartbeat_proto_goTypes = []interface{}{
	(*HeartbeatArgs)(nil),  // 0: pb.HeartbeatArgs
	(*HeartbeatReply)(nil), // 1: pb.HeartbeatReply
	(*ChunkInfo)(nil),      // 2: pb.ChunkInfo
}
var file_Heartbeat_proto_depIdxs = []int32{
	2, // 0: pb.HeartbeatArgs.SuccessChunkInfos:type_name -> pb.ChunkInfo
	2, // 1: pb.HeartbeatArgs.FailChunkInfos:type_name -> pb.ChunkInfo
	2, // 2: pb.HeartbeatReply.ChunkInfos:type_name -> pb.ChunkInfo
	0, // 3: pb.HeartbeatService.Heartbeat:input_type -> pb.HeartbeatArgs
	1, // 4: pb.HeartbeatService.Heartbeat:output_type -> pb.HeartbeatReply
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_Heartbeat_proto_init() }
func file_Heartbeat_proto_init() {
	if File_Heartbeat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Heartbeat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Heartbeat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Heartbeat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Heartbeat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Heartbeat_proto_goTypes,
		DependencyIndexes: file_Heartbeat_proto_depIdxs,
		MessageInfos:      file_Heartbeat_proto_msgTypes,
	}.Build()
	File_Heartbeat_proto = out.File
	file_Heartbeat_proto_rawDesc = nil
	file_Heartbeat_proto_goTypes = nil
	file_Heartbeat_proto_depIdxs = nil
}
